import pandas as pd
import numpy as np
import re
import string
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.preprocessing import MultiLabelBinarizer
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.multiclass import OneVsRestClassifier
from sklearn.metrics import classification_report

# Load the data
questions_df = pd.read_excel("Questions.xlsx", engine="openpyxl")
tags_df = pd.read_csv("Tags.csv")

def clean_text(text):
    text = re.sub(r'<[^>]+>', '', str(text))
    text = text.lower()
    text = re.sub(r'[^a-z0-9\s]', '', text)
    return text

questions_df['Text'] = questions_df['Title'].fillna('') + " " + questions_df['Body'].fillna('')
questions_df['Text'] = questions_df['Text'].apply(clean_text)

top_tags = tags_df['Tag'].value_counts().nlargest(10).index.tolist()
filtered_tags_df = tags_df[tags_df['Tag'].isin(top_tags)]

merged_df = pd.merge(filtered_tags_df, questions_df, left_on='Id', right_on='Id')
grouped = merged_df.groupby('Id').agg({'Tag': list, 'Text': 'first'}).reset_index()

mlb = MultiLabelBinarizer()
y = mlb.fit_transform(grouped['Tag'])

vectorizer = TfidfVectorizer(max_features=5000)
X = vectorizer.fit_transform(grouped['Text'])

X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)

model = OneVsRestClassifier(LogisticRegression(max_iter=1000))
model.fit(X_train, y_train)

y_pred = model.predict(X_val)
print(classification_report(y_val, y_pred, target_names=mlb.classes_))
